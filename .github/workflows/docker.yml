name: Create and publish a Docker image to GHCR

on:
  push:
    paths:
      - ".github/workflows/docker.yml"
      - "Dockerfile"
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
    paths:
      - ".github/workflows/docker.yml"
      - "Dockerfile"

env:
  REGISTRY: ghcr.io
  PLATFORMS: linux/amd64,linux/arm64
  VERSION: "1.4.1"
  VERSION_MINOR: "1.4"
  VERSION_MAJOR: "1"


jobs:
  build:
    name: Build for ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # On main branch:
          # latest, alpine, stable, stable-alpine, alpine-abcdefg, alpine-stable-abcdefg
          # 1.2.3, 1.2, 1, 1.2.3-alpine, 1.2-alpine, 1-alpine
          # On other branches:
          # stable-alpine-abcdefg, alpine-stable-abcdefg
          # stable-alpine-dev, alpine-dev
          - name: alpine
            context: stable/alpine/default/release
            tags: |
              type=raw,value=latest,enable={{is_default_branch}}
              type=raw,value=alpine,enable={{is_default_branch}}
              type=raw,value=stable,enable={{is_default_branch}}
              type=raw,value=stable-alpine,enable={{is_default_branch}}
              type=branch,prefix=stable-alpine-,enable={{!is_default_branch}}
              type=branch,prefix=alpine-,enable={{!is_default_branch}}
              type=sha,prefix=alpine-,enable=${{ startsWith(github.ref, 'refs/heads/') }}
              type=sha,prefix=stable-alpine-,enable=${{ startsWith(github.ref, 'refs/heads/') }}
              type=raw,value=$VERSION,enable={{is_default_branch}}
              type=raw,value=$VERSION_MINOR,enable={{is_default_branch}}
              type=raw,value=$VERSION_MAJOR,enable={{is_default_branch}}
              type=raw,value=$VERSION-alpine,enable={{is_default_branch}}
              type=raw,value=$VERSION_MINOR-alpine,enable={{is_default_branch}}
              type=raw,value=$VERSION_MAJOR-alpine,enable={{is_default_branch}}
          - name: alpine-debug
            context: stable/alpine/default/debug
            tags: |
              type=raw,value=latest-debug,enable={{is_default_branch}}
              type=raw,value=alpine-debug,enable={{is_default_branch}}
              type=raw,value=stable-debug,enable={{is_default_branch}}
              type=raw,value=stable-debug-alpine,enable={{is_default_branch}}
              type=branch,prefix=stable-debug-alpine-,enable={{!is_default_branch}}
              type=branch,prefix=debug-alpine-,enable={{!is_default_branch}}
              type=sha,prefix=debug-alpine-,enable=${{ startsWith(github.ref, 'refs/heads/') }}
              type=sha,prefix=stable-debug-alpine-,enable=${{ startsWith(github.ref, 'refs/heads/') }}
              type=raw,value=$VERSION-debug,enable={{is_default_branch}}
              type=raw,value=$VERSION_MINOR-debug,enable={{is_default_branch}}
              type=raw,value=$VERSION_MAJOR-debug,enable={{is_default_branch}}
              type=raw,value=$VERSION-debug-alpine,enable={{is_default_branch}}
              type=raw,value=$VERSION_MINOR-debug-alpine,enable={{is_default_branch}}
              type=raw,value=$VERSION_MAJOR-debug-alpine,enable={{is_default_branch}}
          
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: ${{ matrix.tags }}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.1.0
        with:
          context: ${{ matrix.context }}
          provenance: false
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max